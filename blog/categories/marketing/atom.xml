<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: marketing | Leknarf]]></title>
  <link href="http://leknarf.net/blog/categories/marketing/atom.xml" rel="self"/>
  <link href="http://leknarf.net/"/>
  <updated>2013-09-02T06:50:52-04:00</updated>
  <id>http://leknarf.net/</id>
  <author>
    <name><![CDATA[Andrew Frankel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Don't limit people to business or technical roles]]></title>
    <link href="http://leknarf.net/blog/2013/05/18/dont-limit-people-to-business-or-technical-roles/"/>
    <updated>2013-05-18T17:48:00-04:00</updated>
    <id>http://leknarf.net/blog/2013/05/18/dont-limit-people-to-business-or-technical-roles</id>
    <content type="html"><![CDATA[<p>Startup founders and employees often describe their role as being either a Business or Technical. Developers, designers, QA testers, etc. are grouped together as part of the engineering/technical team, while product managers, sales, and marketers are part of the business team.</p>

<p>Although common, this division misses the point: there are two essential functions for product company and neither is strictly business or strictly technical. Specifically, these are:</p>

<ol>
<li>Identify a market of people with similar problems, a willingness to pay someone to solve those problems, and the ability to pay for that solution.</li>
<li>Create a product that solves or alleviates a problem, in a repeatable manner, at a cost that is less than the value it provides.</li>
</ol>


<!-- more -->


<h2>The Marketing and Product roles/teams</h2>

<p>I like to refer to the first function as marketing, given that the focus is on identifying a viable market. In this sense, I'm following <a href="http://leknarf.net/blog/2013/03/01/startups-should-spend-more-on-marketing-than-engineering/">Grabowski's definition of marketing</a>. This distinguishes the term "marketing" from promotion or sales activates, which are focused on finding customers for an existing solution or convincing potential customers to pay for that solution. Lean Startup adherents might prefer the term "customer development" instead of marketing, but I use the two interchangeably. At it simplest, marketing is about identifying a problem, then verifying that someone is both willing and able to pay for something that alleviates that problem.</p>

<p>Everything related to solving that problem is product development, including all software development, requirements gathering, design work, etc.. As a developer, I usually find it easiest to explain my ideas about how to solve a problem using code. My initial idea for how to approach a problem is almost never the correct one, so I find it easier to build a small prototype that I can interact with and improve iteratively. Other people might find it easier to express their thoughts in wireframes, presentation decks, or even by writing detailed spec documents. Regardless, the focus here is on creating a solution.</p>

<h2>Sharing responsibility by defining roles</h2>

<p>Defining roles this way can help the marketing and product teams have healthy conversations about where their responsibilities intersect. Everyone at a startup needs to contribute to discovering a viable business model. Delegating this responsibility to a single business co-founder or a siloed team can be disastrous. Instead, the marketing and product teams should focus on their specialities and then discuss the results. Marketing's responsibility is to estimate that a given market will be worth X dollars. Product's responsibility is to estimate that a given solution will cost Y dollars to produce. If X is greater than Y and your estimates are correct, then you might have a viable business model! If not, then your company needs to find a better market, figure out a cheaper product, or both.</p>

<h2>Avoid distractions</h2>

<p>Defining roles in this way can help avoid distractions. Skilled individuals are usually very well practiced at activities they enjoy doing. Experienced marketers usually enjoy the company of other people and can easily fill a schedule with meetings and conversations. Likewise, It's tempting, even enjoyable, for a programmer to spend months building a perfectly crafted engineering marvel. But in both cases, if those activities aren't directed at finding a problem or figuring out a solution, they are ultimately wasted efforts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Startups should spend more on marketing than engineering]]></title>
    <link href="http://leknarf.net/blog/2013/03/01/startups-should-spend-more-on-marketing-than-engineering/"/>
    <updated>2013-03-01T06:00:00-05:00</updated>
    <id>http://leknarf.net/blog/2013/03/01/startups-should-spend-more-on-marketing-than-engineering</id>
    <content type="html"><![CDATA[<p>Grabowski's <a href="/assets/grabowski_marketing.pdf">Who Is Going To Buy The Darn Thing?</a> isn't nearly as popular as Steve Blank's various works, but both share a similar underlying sentiment: that a startup's marketing functions are as important if not more important than product development.</p>

<p>Grabowski's contribution is a simple quantitative metric, the Marketing/Engineering ratio, and the claim that successful startups spend more on marketing than engineering (an M/E ratio greater than 1).</p>

<h2>Defining the M/E ratio</h2>

<p>To start, it's important to clarify what "marketing" is in this context. Although the term is often used to describe a broad range of activities including sales and advertising, Grabowski takes a much narrower view:</p>

<p><blockquote><p>Marketing is defined as the up-front process that comes before the product is ready. (Promoting and selling come after the product is ready.)</p><footer><strong>Grabowski "Who Is Going To Buy The Darn Thing?"</strong></footer></blockquote></p>

<p>Grabowski's writing pre-dates the Lean Startup Movement, so his definition unfortunately implies a hard separation between pre-launch and post-launch activities. Viewed from a Lean perspective, he is essentially arguing that "learning" have its own line item on a budget and that startups should spend more time/effort/money on learning instead of building. Arguing for an M/E ratio greater than 1 is just another way of saying we should spend more time learning about what to build than actually building. That's a fairly obvious statement when put plainly, but it's still surprising how many entrepreneurs get mired down in product development before actually confirming that their target market exists.</p>

<!-- more -->


<p>Distinguishing marketing from sales makes the M/E ratio a particularly strong statement. Many startups implicitly group marketing, advertising, and sales into one "customer acquisition" category. While advertising and sales are important (I think many startups would benefit from increasing their advertising budgets), they are not a substitute for true marketing efforts, which should be focused on discovering customer needs. Just spending equal amounts on engineering and customer acquisition is not enough. Startups need to invest in learning before and while building a product and then again invest in sales once a product begins to find market fit. I agree with <a href="http://davidcummings.org/2011/04/25/the-31-customer-acquisition-to-engineering-spend-ratio/">David Cummings' claim</a> that startups should budget for a 3:1 customer acquisition to engineering ratio, but would go one step further and argue that a significant part (more than half) of that customer acquisition spend should go to upfront marketing.</p>

<p>In fact, many sales teams don't understand marketing. Although sales and marketing are often seen as complementary skill sets, Grabowski cites an example of a firm where: "Many engineering efforts had been urged by the sales force, which had hoped to exhibit technology that would make customers' jaws drop." He goes on to describe this as a common pitfall: "Mistaking selling for marketing". Sales teams are well positioned to communicate with customers, but there is a fundamental difference between pitching your wares and listening to what the customer wants. The best salesmen already know to listen to their customers, but not everyone has the patience and charm of <a href="http://www.amazon.com/gp/product/0671027034/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0671027034&amp;linkCode=as2&amp;tag=leknarf-20">Dale Carnegie</a>.</p>

<h2>Minimizing risk</h2>

<p><blockquote><p>Technology-based startups present two types of technical risk. First, there is the risk that the startup cannot make the technology work. The second risk [â€¦] is that the startup does make the technology work, but that they are developing the wrong technology. Up-front marketing can guide engineering to the right technology.</p><footer><strong>Grabowski "Who Is Going To Buy The Darn Thing?"</strong></footer></blockquote></p>

<p>The embarrassing truth for most developers is that software engineering is relatively easy: few software companies have failed because they couldn't get their technology to work. Pharmaceutical companies have real technology risk: you could easily spend millions trying to develop a cure that never works. Aerospace companies have real technology risk: a single unchecked failure would not only destroy the company, it could literally kill.</p>

<p>For most software companies, the worst case scenario is that the product needs to be shelved for 6 months while the engineering team re-architects from scratch. Twitter and Tumbler both went those phases of significant instability when their user base outgrew the capacity of their early prototypes, but both were able to overhaul their software with minimal business impact. Spending 6 months building something that no one wants is much worse than spending 1 month building something desirable that doesn't work.</p>

<h2>Budgeting for marketing</h2>

<p>The Marketing/Engineering ratio's iron-clad simplicity is its main appeal. It's easy to read Steve Blank, decide to "get out of the building", and then completely shirk any meaningful change in activity. If a single founder worked 4 days a week writing software and spent the fifth talking to customers, he might feel like he's following Steve Blank's advice, but an M/E ratio of .25 is clearly substandard according to Grabowski.</p>

<p>That simplicity is wonderful for planning. I have woefully little experience crafting marketing plans for new products, but have been preparing engineering estimates for most of my career. Targeting an M/E ratio (or more), makes it easy to infer the marketing budget from engineering estimates:</p>

<p><blockquote><p>Engineers know how to develop an engineering budget. Simply use the engineering budget to establish the size and timing of the up-front marketing budget.</p><footer><strong>Grabowski "Who Is Going To Buy The Darn Thing?"</strong></footer></blockquote></p>

<p>Committing to this ratio and maintaining it for the life of a project is a natural check on feature sprawl and cost-overruns. If someone wants to add a pet feature that "only" requires one-engineering-week of effort, he'd best invest one-marketing-week upfront to verify the feature is actually desirable. If the initial engineering estimates were low and it's now clear that the project will require 3 times as much development time, then the company should increase its marketing efforts 3-fold.</p>

<p>Conversely, cheap engineering efforts can be pursued with minimal marketing. If the concept for a new feature can accurately be expressed as a 1-day MVP, then the team only needs to spend 1 day interviewing customers before proceeding.</p>

<p>By establishing a firm M/E ratio, startups can align the interests of their marketing and engineering teams. Instead of throwing new feature requests over the wall, marketers are incentivised to justify their requests with firm data, since additional engineering commitments will also place additional demands on the marketing team.</p>
]]></content>
  </entry>
  
</feed>
